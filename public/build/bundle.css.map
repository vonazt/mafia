{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import io from 'socket.io-client';\n  const socket = io();\n\n  let name;\n  let gameId;\n\n  let joinId;\n\n  let gameError;\n\n  let players = [];\n  let playerToNominate;\n  let mafia = [];\n\n  $: joinedMafia = mafia.join(`, `);\n\n  let role = ``;\n\n  const handleCreate = () => {\n    socket.emit(`create`);\n  };\n\n  socket.on(`createSuccess`, (newGameId) => {\n    console.log('new game id', newGameId);\n    gameId = newGameId;\n  });\n\n  socket.on(`joinSuccess`, (joinedGameId, playersResponse) => {\n    players = [...playersResponse];\n    gameId = joinedGameId;\n  });\n\n  socket.on(`noGame`, () => {\n    gameError = `Game not found`;\n  });\n\n  const handleJoin = () => {\n    console.log('joining', joinId);\n    socket.emit(`join`, joinId);\n  };\n\n  console.log('game is id', gameId);\n\n  const addPlayer = (e) => {\n    e.preventDefault();\n    console.log('adding player', name);\n    socket.emit(`add`, gameId, name);\n  };\n\n  socket.on(`addedPlayer`, (playersResponse) => {\n    console.log('players response', playersResponse);\n    players = [...playersResponse];\n  });\n\n  $: console.log(\n    'connected players',\n    players.filter(({ connected }) => connected),\n  );\n\n  socket.on(`role`, (assignedRole, otherMafia) => {\n    console.log('yo');\n    console.log('your role is', assignedRole);\n    role = assignedRole;\n    if (otherMafia) mafia = [...otherMafia];\n  });\n\n  $: console.log('role is', role);\n\n  const handleStart = () => {\n    socket.emit(`start`, gameId);\n  };\n\n  let day = false;\n  let mafiaAwake = false;\n  let playerToDie;\n\n  socket.on(`readyToStart`, () => {\n    mafiaAwake = true;\n  });\n\n  const handleAssassinatePlayer = (playerToAssassinate) => {\n    console.log('player to assassinate', playerToAssassinate);\n    // players = [\n    //   ...players.map((player) =>\n    //     player.name === playerToAssassinate.name\n    //       ? { ...player, nominated: true }\n    //       : player,\n    //   ),\n    // ];\n    socket.emit(`assassinate`, playerToAssassinate, name, gameId);\n  };\n\n  socket.on(`postAssassination`, (updatedGame) => {\n    console.log('updated game is', updatedGame);\n    players = [...updatedGame.players];\n    if (updatedGame.stageComplete) {\n      playerToDie = updatedGame.lastPlayerKilled;\n    }\n  });\n\n  const handleConfirmKill = () => {\n    console.log(`confirmed that ${playerToDie} will be killed`);\n  };\n</script>\n\n<style>\n  button {\n    height: 5rem;\n    width: 15rem;\n  }\n\n  .container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n  }\n\n  .mafia {\n    cursor: pointer;\n  }\n</style>\n\n<main>\n  <div class=\"container\">\n    {#if !gameId}\n      <div><button on:click={handleCreate}>Create</button></div>\n      <div>\n        {#if gameError}\n          <p>{gameError}</p>\n        {/if}\n        <input bind:value={joinId} />\n        <button on:click={handleJoin}>Join</button>\n      </div>\n    {:else}\n      <div width=\"100%\">\n        <p>YOU'RE IN ROOM {gameId}</p>\n      </div>\n      <div width=\"100%\">\n        <form>\n          <label>Name <input bind:value={name} /></label><button\n            on:click={addPlayer}>Add player</button>\n        </form>\n        <ol>\n          {#each players as player}\n            {#if role === `mafia`}\n              <input\n                type=\"radio\"\n                value={player}\n                bind:group={playerToNominate}\n                on:click={() => {\n                  handleAssassinatePlayer(player);\n                }} />\n            {/if}\n            <li class:mafia={role === `mafia`}>{player.name}</li>\n          {/each}\n        </ol>\n        Registered players:\n        {players.length}\n        {#if players.length >= 6}\n          <button on:click={handleStart}>Start</button>\n        {/if}\n      </div>\n      {#if role}\n        <div width=\"100%\">\n          <p>You are a {role}</p>\n          {#if mafia.length}\n            <p>The other mafia are {joinedMafia}</p>\n          {/if}\n        </div>\n      {/if}\n      {#if mafiaAwake}\n        <p>\n          Night settles on the city. The citizens go to sleep. The mafia awake.\n          They chose someone to kill.\n        </p>\n      {/if}\n      {#if playerToDie && mafiaAwake}\n        <p>{playerToDie.name} will be sent to sleep with the fishes</p>\n        <button on:click={handleConfirmKill}>Confirm</button>\n      {/if}\n    {/if}\n  </div>\n</main>\n"
  ],
  "names": [],
  "mappings": "AA2GE,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,AACd,CAAC,AAED,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,OAAO,AACjB,CAAC"
}